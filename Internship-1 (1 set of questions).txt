The Czechoslovakia Bank wants to analyse its financial data to gain insights and make informed decisions. The bank needs to identify trends, patterns, and potential risks in its financial operations. They also want to explore the possibility of introducing new financial products or services based on their analysis.

The bank has identified the following questions as important for their analysis:
---------------------------------------------------------------------------------------------------------------------------------------


What is the demographic profile of the bank's clients and how does it vary across districts?

How the banks have performed over the years. Give their detailed analysis year & month-wise.?

What are the most common types of accounts and how do they differ in terms of usage and profitability?

Which types of cards are most frequently used by the bank's clients and what is the overall profitability of the credit card business?

What are the major expenses of the bank and how can they be reduced to improve profitability?

What is the bankâ€™s loan portfolio and how does it vary across different purposes and client segments?

How can the bank improve its customer service and satisfaction levels?

Can the bank introduce new financial products or services to attract more customers and increase profitability?




FINAL ANSWER
---------------------
QUE_1 ANSWER>

SELECT
d.a1 AS district_id,
d.a2 AS district_name,
COUNT(l.loan_id) AS loan_count,
AVG(l.amount) AS average_loan_amount,
AVG(t.amount) AS average_transaction_amount
FROM
loan l
JOIN
account a ON l.account_id = a.account_id
JOIN
district d ON a.district_id = d.a1
LEFT JOIN
trans t ON a.account_id = t.account_id
GROUP BY
d.a1, d.a2
LIMIT 0, 400;

---------------------------------------------------------------------------------------------------

QUE_2 ANSWER>

SELECT
year,
account_count,
transaction_count,
IFNULL(ROUND((account_count - lag_account_count) / lag_account_count * 100, 2), 0) AS account_count_increase_percentage,
IFNULL(ROUND((transaction_count - lag_transaction_count) / lag_transaction_count * 100, 2), 0) AS transaction_count_increase_percentage
FROM (
SELECT
YEAR(t.dates) AS year,
COUNT(DISTINCT a.account_id) AS account_count,
COUNT(DISTINCT t.trans_id) AS transaction_count,
LAG(COUNT(DISTINCT a.account_id)) OVER (ORDER BY YEAR(t.dates)) AS lag_account_count,
LAG(COUNT(DISTINCT t.trans_id)) OVER (ORDER BY YEAR(t.dates)) AS lag_transaction_count
FROM
trans t
LEFT JOIN
account a ON t.account_id = a.account_id
GROUP BY
year
) AS subquery
ORDER BY
year;


SELECT
month,
account_count,
transaction_count,
IFNULL(ROUND((account_count - lag_account_count) / lag_account_count * 100, 2), 0) AS account_count_increase_percentage,
IFNULL(ROUND((transaction_count - lag_transaction_count) / lag_transaction_count * 100, 2), 0) AS transaction_count_increase_percentage
FROM (
SELECT
MONTH(t.dates) AS month,
COUNT(DISTINCT a.account_id) AS account_count,
COUNT(DISTINCT t.trans_id) AS transaction_count,
LAG(COUNT(DISTINCT a.account_id)) OVER (ORDER BY MONTH(t.dates)) AS lag_account_count,
LAG(COUNT(DISTINCT t.trans_id)) OVER (ORDER BY MONTH(t.dates)) AS lag_transaction_count
FROM
trans t
LEFT JOIN
account a ON t.account_id = a.account_id
GROUP BY
month
) AS subquery
ORDER BY
month;
---------------------------------------------------------------------------------------------------



QUE_3_ANSWER>

SELECT
t.type AS transaction_type,
COUNT(DISTINCT t.account_id) AS account_count,
COUNT(DISTINCT l.loan_id) AS loan_holder_count,
COUNT(t.trans_id) AS transaction_count,
AVG(l.amount) AS average_loan_amount
FROM
trans t
LEFT JOIN
loan l ON t.account_id = l.account_id
GROUP BY
t.type
ORDER BY
transaction_count DESC;

---------------------------------------------------------------------------------------------------

QUE_4_ANSWER>

SELECT
c.type AS card_type,
COUNT(t.trans_id) AS transaction_count,
AVG(t.amount) AS average_amount
FROM
trans t
LEFT JOIN
disp d ON t.account_id = d.account_id
LEFT JOIN
card c ON d.disp_id = c.disp_id
LEFT JOIN
client cl ON d.client_id = cl.client_id
GROUP BY
c.type
ORDER BY
transaction_count DESC;
---------------------------------------------------------------------------------------------------

QUE_5_ANSWER>

WITH ExpenseSummary AS (
SELECT
CASE
WHEN k_symbol = 'DUCHOD' THEN 'Pension'
WHEN k_symbol = 'UROK' THEN 'Interest'
WHEN k_symbol = 'SIPO' THEN 'Household'
WHEN k_symbol = 'SLUZBY' THEN 'Services'
WHEN k_symbol = '0' THEN '0'
WHEN k_symbol = 'POJISTNE' THEN 'Insurance'
WHEN k_symbol = 'SANKC. UROK' THEN 'Penalty Interest'
WHEN k_symbol = 'UVER' THEN 'Loan'
END AS expense_category,
SUM(amount) AS total_amount,
SUM(amount) / SUM(SUM(amount)) OVER () * 100 AS expense_percentage,
ROW_NUMBER() OVER (ORDER BY SUM(amount) DESC) AS expense_rank
FROM
trans
WHERE
k_symbol IN ('DUCHOD', 'UROK', 'SIPO', 'SLUZBY', '0', 'POJISTNE', 'SANKC. UROK', 'UVER')
GROUP BY
expense_category
)
SELECT
expense_category,
total_amount,
expense_percentage
FROM
ExpenseSummary;
---------------------------------------------------------------------------------------------------

QUE_6_ANSWER>

SELECT
loan.loan_id,
loan.account_id,
loan.date AS loan_date,
loan.amount AS loan_amount,
loan.duration AS loan_duration,
loan.payments AS loan_payments,
loan.status AS loan_status,
orders.bank_to,
orders.amount AS order_amount,
orders.k_symbol,
client.client_id,
client.birth_number,
client.district_id AS client_district_id,
district.a2 AS client_district_name,
district.a3 AS client_region,
disp.type AS client_type,
disp.account_id AS client_account_id,
account.frequency AS account_frequency
FROM
loan
JOIN
orders ON loan.account_id = orders.account_id
JOIN
client ON loan.account_id = client.client_id
JOIN
district ON client.district_id = district.a1
JOIN
disp ON loan.account_id = disp.account_id
JOIN
account ON loan.account_id = account.account_id;
---------------------------------------------------------------------------------------------------

QUE_7_ANSWER>

SELECT
account.account_id,
account.frequency,
district.a2 AS district_name,
district.a1 AS district_id,
AVG(trans.amount) AS average_transaction_amount
FROM
account
JOIN
district ON account.district_id = district.a1
LEFT JOIN
trans ON account.account_id = trans.account_id
GROUP BY
account.district_id,
account.account_id,
account.frequency,
district.a2,
district.a1;


QUE_8_ANSWER>
By introducing innovative financial products and services tailored to customer needs, leveraging digital transformation, and fostering strategic partnerships, the bank can attract more customers and increase profitability

